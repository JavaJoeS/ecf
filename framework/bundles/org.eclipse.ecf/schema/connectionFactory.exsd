<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.ecf">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.ecf" id="comm" name="ECF Connection Factory"/>
      </appInfo>
      <documentation>
         This extension allows plugins to register themselves as &apos;providers&apos; of ECF connection factories.  Once registered via this extension point, plugins can provide implementations of custom ISynchAsynchConnection instances via the ECF connection factory (&lt;b&gt;org.eclipse.ecf.core.comm.ConnectionFactory&lt;/b&gt;).
&lt;p&gt;Plugins using this extension point can define new implementation classes of the core ISynchAsynchConnection interface.  When client requests are made to ECF to create &lt;b&gt;ISynchAsynchConnection&lt;/b&gt; instances via the ConnectionFactory.makeSynchAsynchConnection() methods, requests to create instances of the appropriate type will be re-directed to the given extension.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="connectionFactory"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="connectionFactory">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="description" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         0.2.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The API for this extension point is provided by the &lt;b&gt;org.eclipse.ecf.core.comm.ContainerFactory&lt;/b&gt; static methods.  Specifically, the &apos;makeSynchAsynchConnection&apos; static methods are to be used by clients.  The functionality provided by the extension point mechanism can be used at runtime via the &lt;b&gt;ConnectionFactory.addDescription(ConnectionDescription)&lt;/b&gt; method.  The available connection factories can be queried with the &lt;b&gt;ConnectionFactory.getDescriptions()&lt;/b&gt; method.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         The supplied implementations of this extension point are:

In org.eclipse.ecf.provider plugin:

org.eclipse.ecf.provider.tcp.Client$Creator
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2005 Composent, Inc. and others.
All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v10.html.  Contributors:  Composent, Inc. - initial API and implementation
      </documentation>
   </annotation>

</schema>
